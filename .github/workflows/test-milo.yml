name: Verify Milo Changes

on:
  workflow_dispatch:

jobs:
  run-tests:
    name: Trigger CircleCI Job
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Trigger CircleCI Job
        run: |
          curl -X POST 'https://circle.ci.adobe.com/api/v2/project/gh/wcms/Platform-UI-DC/pipeline' \
              -H 'Circle-Token: ${{ secrets.CCI_TOKEN }}' \
              -H 'content-type: application/json' \
              -d "{\"branch\":\"main\", \
                    \"parameters\":{ \
                      \"env\":\"prod\", \
                      \"dcbranch\":\"main\" \
                    } \
              }"

      - name: Trigger Jenkins Job
        run: |
          curl -X POST 'https://dc.ci.corp.adobe.com/job/DC%20Release%20-%20Run%20Nala/buildWithParameters?token=${{ secrets.JNK_JOB_TOKEN }}&branch=main' \
              -u '${{ secrets.JNK_USER }}:${{ secrets.JNK_API_TOKEN }}'

  run-tests-gha:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: Smoke Test
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}-${{ runner.os }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Run the tests
        run:   |
          if [ "$RUNNER_OS" == "Linux" ]; then
              npx playwright install --with-deps firefox
              xvfb-run -a npx run test/e2e/frictionless -t @smoke-converter --browser firefox
          elif [ "$RUNNER_OS" == "macOS" ]; then
              npx playwright install --with-deps webkit
              npx run test/e2e/frictionless -t @smoke-converter --browser webkit
          else
              npx playwright install --with-deps chromium
              npx run test/e2e/frictionless -t @smoke-converter
          fi
        shell: bash

      - name: Save test logs
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: reports/         
